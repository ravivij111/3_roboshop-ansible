#- name: Demo
#  ansible.builtin.debug:
#    msg: Component - Frontend

#script=$(realpath "$0")
#script_path=$(dirname "$script")
#source ${script_path}/common.sh
#
#  #echo   $app_user
#func_print_head " Installing Nginx"
#yum install nginx -y &>> /tmp/roboshop.log
#func_stat_check $?
#
#rm -rf /usr/share/nginx/html/*
#func_print_head " Downloading and unzipping the front end zip files "
#curl -o /tmp/frontend.zip https://roboshop-artifacts.s3.amazonaws.com/frontend.zip &>> /tmp/roboshop.log
#cd /usr/share/nginx/html
#unzip /tmp/frontend.zip &>> /tmp/roboshop.log
#func_stat_check $?
#
#cp ${script_path}/roboshop.conf /etc/nginx/default.d/roboshop.conf
#func_print_head " starting the nginx services **************** "
#systemctl enable nginx
#systemctl restart nginx
#func_stat_check $?
# Install the nginx
- name: Install the nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

 #Copy the roboshop.conf to another place
#- name: Copy file
#  ansible.builtin.copy:
#    # the source path fetches from the files directory
#    src: roboshop.conf
#    dest: /etc/nginx/default.d/roboshop.conf

#Copy the template to another place
- name: Copy template
  ansible.builtin.template:
    # the source path fetches from the files directory
    src: roboshop.conf
    dest: /etc/nginx/default.d/roboshop.conf

#Deletes the html directory
- name: Recursively remove directory
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: absent
#Craete html directory
- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /usr/share/nginx/html
    state: directory
# Download app zip file and unarchive
- name: Unarchive a file that needs to be downloaded (added in 2.0)
  ansible.builtin.unarchive:
    src: https://roboshop-artifacts.s3.amazonaws.com/frontend.zip
    dest: /usr/share/nginx/html
    remote_src: yes
# Start the service, enabled: true is to start the service after re-boot
- name: Start nginx service, if not started
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: true

- name: FileImport Filebeat
  ansible.builtin.import_role:
    name: elk
    tasks_from: filebeat

#- name: FiImport Prometheus
#  ansible.builtin.import_role:
#    name: prometheus
#    tasks_from: node_exporter
